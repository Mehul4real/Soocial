[{"D:\\React\\insta-clone\\server\\client\\src\\index.js":"1","D:\\React\\insta-clone\\server\\client\\src\\reportWebVitals.js":"2","D:\\React\\insta-clone\\server\\client\\src\\App.js":"3","D:\\React\\insta-clone\\server\\client\\src\\components\\Navbar.js":"4","D:\\React\\insta-clone\\server\\client\\src\\components\\screens\\Login.js":"5","D:\\React\\insta-clone\\server\\client\\src\\components\\screens\\Home.js":"6","D:\\React\\insta-clone\\server\\client\\src\\components\\screens\\Profile.js":"7","D:\\React\\insta-clone\\server\\client\\src\\components\\screens\\CreatePost.js":"8","D:\\React\\insta-clone\\server\\client\\src\\components\\screens\\Signup.js":"9","D:\\React\\insta-clone\\server\\client\\src\\reducer\\userReducer.js":"10","D:\\React\\insta-clone\\server\\client\\src\\components\\screens\\UserProfile.js":"11","D:\\React\\insta-clone\\server\\client\\src\\components\\screens\\SubscribedUserPosts.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":2130,"mtime":1611892087627,"results":"16","hashOfConfig":"14"},{"size":2842,"mtime":1612022944383,"results":"17","hashOfConfig":"14"},{"size":2483,"mtime":1611494210911,"results":"18","hashOfConfig":"14"},{"size":6247,"mtime":1618945223018,"results":"19","hashOfConfig":"14"},{"size":3733,"mtime":1611899079160,"results":"20","hashOfConfig":"14"},{"size":5548,"mtime":1618951797580,"results":"21","hashOfConfig":"14"},{"size":3845,"mtime":1611895926922,"results":"22","hashOfConfig":"14"},{"size":541,"mtime":1611896369330,"results":"23","hashOfConfig":"14"},{"size":4875,"mtime":1611894171208,"results":"24","hashOfConfig":"14"},{"size":5997,"mtime":1611892724435,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"4bw97o",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},"D:\\React\\insta-clone\\server\\client\\src\\index.js",[],["57","58"],"D:\\React\\insta-clone\\server\\client\\src\\reportWebVitals.js",[],"D:\\React\\insta-clone\\server\\client\\src\\App.js",["59","60"],"import React,{useEffect,createContext, useReducer, useContext} from 'react';\nimport \"./App.css\";\nimport {BrowserRouter, Route, Switch, useHistory} from 'react-router-dom'\n\n//Components\nimport NavBar from './components/Navbar';\nimport Home from './components/screens/Home';\nimport Login from './components/screens/Login';\nimport Signup from './components/screens/Signup';\nimport Profile from './components/screens/Profile';\nimport CreatePost from './components/screens/CreatePost';\nimport UserProfile from './components/screens/UserProfile';\nimport SubscribedUserPosts from './components/screens/SubscribedUserPosts'\nimport {reducer, initialState} from './reducer/userReducer'\n//exact is used to specify blank path otherwise / is included in all url\n//Switch makes onlu one clild avtive at a time (using it is optional)\nexport const UserContext = createContext()\n\n\nconst Routing=()=>{\n  const history = useHistory()\n  const {state, dispatch} = useContext(UserContext)\n  useEffect(()=>{\n    const user =JSON.parse(localStorage.getItem(\"user\"))\n    if(user){\n      dispatch({type:\"USER\", payload:user})\n    }else{\n      history.push('/login')\n    }\n  },[]) //empty effect[] means will be executed only first time on page load\n  return(\n    <Switch>\n        <Route exact path=\"/\">\n          <Home/>        \n        </Route>\n        <Route path=\"/login\">\n          <Login/>        \n        </Route>\n        <Route path=\"/signup\">\n          <Signup/>        \n        </Route>\n        <Route exact path=\"/profile\">\n          <Profile/>        \n        </Route>\n        <Route path=\"/create\">\n          <CreatePost/>        \n        </Route>\n        <Route path=\"/profile/:userId\">\n          <UserProfile/>        \n        </Route>\n        <Route path=\"/myfollowingpost\">\n          <SubscribedUserPosts/>        \n        </Route>\n    </Switch>    \n  )\n}\n\nfunction App() {\n\n  const [state, dispatch] = useReducer(reducer, initialState)\n  return (\n    <UserContext.Provider value ={{state, dispatch}}>\n      <BrowserRouter>\n        <NavBar/>\n        <Routing/>\n      </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","D:\\React\\insta-clone\\server\\client\\src\\components\\Navbar.js",[],"D:\\React\\insta-clone\\server\\client\\src\\components\\screens\\Login.js",["61","62","63"],"import React,{useState, useContext} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport {UserContext} from '../../App'\r\n\r\nconst Login = ()=>{\r\n    const {state, dispatch} = useContext(UserContext)\r\n    const[password,setPassword] = useState(\"\")\r\n    const[email, setEmail] = useState(\"\")\r\n    const history = useHistory()\r\n    const PostData=()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"Invalid Email\", classes:\"#c62828 red darken-3\"})\r\n            return\r\n        }    \r\n        fetch(\"/signin\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            //console.log(data)\r\n            if(data.error){\r\n                M.toast({html: data.error, classes:\"#c62828 red darken-3\"})\r\n            }else{\r\n                localStorage.setItem(\"jwt\", data.token)\r\n                localStorage.setItem(\"user\", JSON.stringify(data.user))\r\n                dispatch({type:\"USER\", payload:data.user})\r\n                M.toast({html: \"LogeIn Successful\", classes:\"#388e3c green darken-2\"})\r\n                history.push('/')\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n\r\n    } \r\n    return(\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n                <h2>Social</h2>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e)=>setEmail(e.target.value)}\r\n                />\r\n                <input \r\n                    type=\"password\" \r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e)=>setPassword(e.target.value)}\r\n\r\n                />\r\n                <button \r\n                    className=\"btn waves-effect waves-light #64b5f6 blue darken-2\"\r\n                    onClick={()=>PostData()}\r\n                >Login</button>\r\n                <h5><Link to=\"/signup\">Don't have an account?</Link></h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","D:\\React\\insta-clone\\server\\client\\src\\components\\screens\\Home.js",["64","65","66","67"],"D:\\React\\insta-clone\\server\\client\\src\\components\\screens\\Profile.js",["68","69","70"],"import React,{useContext, useEffect, useState} from 'react';\r\nimport {UserContext} from '../../App'\r\n\r\nconst Profile = ()=>{\r\n    const [myPics, setMyPics]= useState([])\r\n    const {state, dispatch} = useContext(UserContext)\r\n    const [image,setImage] = useState(undefined)\r\n    //const [url,setUrl] = useState(undefined)\r\n    //console.log(state)\r\n    useEffect(()=>{\r\n        fetch('/mypost',{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            //console.log(result)\r\n            setMyPics(result.mypost)\r\n        })\r\n        console.log(state)\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(image){const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"insta-clone\")\r\n        data.append(\"cloud_name\",\"cloud1998\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/cloud1998/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            //setUrl(data.url)\r\n            //console.log(data.url)\r\n            fetch('/updatepic',{\r\n               method:\"put\",\r\n               headers:{\r\n                   \"Content-Type\":\"application/json\",\r\n                   \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n               },\r\n               body:JSON.stringify({\r\n                   pic:data.url\r\n               })\r\n           }).then(res=>res.json())\r\n           .then(result=>{\r\n               console.log(result)\r\n               localStorage.setItem(\"user\",JSON.stringify({...state,pic:result.pic}))\r\n               dispatch({type:\"UPDATEPIC\",payload:result.pic})\r\n               //window.location.reload()\r\n           })\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })}\r\n    },[image])\r\n\r\n    const updatePic=(file)=>{\r\n        setImage(file)       \r\n    }\r\n    return(\r\n        <div style={{maxWidth:\"550px\", margin:\"0px auto\"}}>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'space-around',\r\n                margin:\"18px 0px\",\r\n                borderBottom: \"1px solid grey\"\r\n            }}>\r\n                <div>\r\n                    <img style={{width:\"160px\", height:\"160px\", borderRadius:\"80px\"}}\r\n                    src={state?state.pic:\"\"}/>\r\n                </div>\r\n                <div>\r\n                    <h4>{state?state.name:\"loading..\"}</h4>\r\n                    <div style={{display:'flex', justifyContent:\"space-between\",width:\"108%\"}}>\r\n                        <h6>{myPics.length} posts</h6>\r\n                        <h6>{state?state.followers.length:\"0\"} followers</h6>\r\n                        <h6>{state?state.following.length:\"0\"} following</h6>\r\n                    </div>\r\n                    <div className=\"file-field input-field\">\r\n                    <div className=\"btn #64b5f6 blue darken-2\">\r\n                        <span>Update Pic</span>\r\n                        <input type=\"file\" onChange={(e)=>updatePic(e.target.files[0])}/>\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\"/>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"gallery\">\r\n                {\r\n                    myPics.map(items=>{\r\n                        return(    \r\n                            <img key={items._id} className=\"item\" src={items.photo} alt={items.title}/>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","D:\\React\\insta-clone\\server\\client\\src\\components\\screens\\CreatePost.js",["71","72","73","74"],"D:\\React\\insta-clone\\server\\client\\src\\components\\screens\\Signup.js",["75","76","77"],"import React,{useState, useEffect} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css';\r\n\r\n\r\nconst Signup = ()=>{\r\n    const[name, setName] = useState(\"\")\r\n    const[password,setPassword] = useState(\"\")\r\n    const[email, setEmail] = useState(\"\")\r\n    const [image,setImage] = useState(\"\")\r\n    const [url,setUrl] = useState(undefined)\r\n\r\n    useEffect(()=>{\r\n        uploadFields()\r\n    },[url])\r\n\r\n    const history = useHistory()\r\n    const uploadPic=()=>{\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"insta-clone\")\r\n        data.append(\"cloud_name\",\"cloud1998\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/cloud1998/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            setUrl(data.url)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    const uploadFields=()=>{\r\n        if(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            fetch(\"/signup\",{\r\n                method:\"post\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\"\r\n                },\r\n                body:JSON.stringify({\r\n                    name,\r\n                    email,\r\n                    password,\r\n                    pic:url\r\n\r\n                })\r\n            }).then(res=>res.json())\r\n            .then(data=>{\r\n                if(data.error){\r\n                    M.toast({html: data.error, classes:\"#c62828 red darken-3\"})\r\n                }else{\r\n                    M.toast({html: data.message, classes:\"#388e3c green darken-2\"})\r\n                    history.push('/login')\r\n                }\r\n            }).catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }else{\r\n            M.toast({html: \"Invalid Email\", classes:\"#c62828 red darken-3\"})\r\n        }\r\n    }\r\n    const PostData=()=>{\r\n        if(image){\r\n            uploadPic();\r\n        }else{\r\n            uploadFields();\r\n        }\r\n\r\n    } \r\n    return(\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n                <h2>Social</h2>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Name\"\r\n                    value={name}\r\n                    onChange={(e)=>setName(e.target.value)}\r\n                />\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e)=>setEmail(e.target.value)}\r\n                />\r\n                <input \r\n                    type=\"password\" \r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e)=>setPassword(e.target.value)}\r\n                />\r\n                <div className=\"file-field input-field\">\r\n                    <div className=\"btn #64b5f6 blue darken-2\">\r\n                        <span>Upload Image</span>\r\n                        <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])}/>\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\"/>\r\n                    </div>\r\n                </div>\r\n                <button \r\n                className=\"btn waves-effect waves-light #64b5f6 blue darken-2\"\r\n                onClick={()=>PostData()}\r\n                >\r\n                        Signup\r\n                </button>\r\n \r\n                <h5><Link to=\"/login\">Already have an account?</Link></h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;","D:\\React\\insta-clone\\server\\client\\src\\reducer\\userReducer.js",[],"D:\\React\\insta-clone\\server\\client\\src\\components\\screens\\UserProfile.js",["78","79","80","81","82","83","84"],"import React,{useContext, useEffect, useState} from 'react';\r\nimport {UserContext} from '../../App'\r\nimport {useParams} from 'react-router-dom'\r\nconst Profile = ()=>{\r\n    const [userPics, setUserPics]= useState([])\r\n    const [userDetails, setUserDetails]= useState([])\r\n    const [userProfile,setProfile] = useState(null)\r\n    const {state, dispatch} = useContext(UserContext)\r\n    const {userId} = useParams()\r\n    const [showfollow,setShowFollow] = useState(state?!state.following.includes(userId):true)\r\n    useEffect(()=>{\r\n        fetch(`/user/${userId}`,{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            //console.log(result)\r\n            // setUserPics(result.posts)\r\n            // setUserDetails(result.user)\r\n            setProfile(result)\r\n\r\n        })\r\n    },[])\r\n\r\n    const followUser = ()=>{\r\n        fetch('/follow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                followId:userId\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            //console.log(data)\r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n            localStorage.setItem(\"user\",JSON.stringify(data))\r\n            setProfile((prevState)=>{\r\n                return {\r\n                    ...prevState,\r\n                    user:{\r\n                        ...prevState.user,\r\n                        followers:[...prevState.user.followers,data._id]\r\n                    }\r\n                }\r\n            })\r\n            setShowFollow(false)\r\n        })\r\n    }\r\n    const unfollowUser = ()=>{\r\n        fetch('/unfollow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                unfollowId:userId\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{    \r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n            localStorage.setItem(\"user\",JSON.stringify(data))\r\n            setProfile((prevState)=>{\r\n                const newFollower = prevState.user.followers.filter(item=>item != data._id )\r\n                return {\r\n                    ...prevState,\r\n                    user:{\r\n                        ...prevState.user,\r\n                        followers:newFollower\r\n                    }\r\n                }\r\n            })\r\n            \r\n            setShowFollow(true)\r\n        })\r\n    }\r\n\r\n\r\n    return(\r\n        <>{userProfile?\r\n            <div style={{maxWidth:\"550px\", margin:\"0px auto\"}}>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'space-around',\r\n                margin:\"18px 0px\",\r\n                borderBottom: \"1px solid grey\"\r\n            }}>\r\n                <div>\r\n                    <img style={{width:\"160px\", height:\"160px\", borderRadius:\"80px\"}}\r\n                    src={userProfile.user.pic}/>\r\n                </div>\r\n                <div>\r\n                    <h4>{userProfile.user.name}</h4>\r\n                    <div style={{display:'flex', justifyContent:\"space-between\",width:\"108%\"}}>\r\n                        <h6>{userProfile.posts.length} posts</h6>\r\n                        <h6>{userProfile.user.followers.length} followers</h6>\r\n                        <h6>{userProfile.user.following.length} following</h6>\r\n                    </div>\r\n                    {showfollow?\r\n                    <button \r\n                        className=\"btn waves-effect waves-light #64b5f6 blue darken-2\"\r\n                        onClick={()=>followUser()}\r\n                    >\r\n                        Follow\r\n                    </button>\r\n                    :\r\n                    <button \r\n                        className=\"btn waves-effect waves-light #64b5f6 blue darken-2\"\r\n                        onClick={()=>unfollowUser()}\r\n                    >\r\n                        UnFollow\r\n                    </button>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"gallery\">\r\n                {\r\n                    userProfile.posts.map(items=>{\r\n                        return(    \r\n                            <img key={items._id} className=\"item\" src={items.photo} alt={items.title}/>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n        :\r\n        <h2>loading!...</h2>\r\n        }</>\r\n        \r\n    )\r\n}\r\n\r\nexport default Profile;","D:\\React\\insta-clone\\server\\client\\src\\components\\screens\\SubscribedUserPosts.js",["85","86","87","88","89","90"],"import React,{useState, useEffect, useContext} from 'react';\r\nimport {UserContext} from '../../App'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst SubscribedUserPosts = () => {\r\n    const [data,setData]=useState([]);\r\n    const {state, dispatch} = useContext(UserContext)\r\n    //console.log(state._id)\r\n    useEffect(()=>{\r\n        fetch('/getsubspost',{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            setData(result.posts)\r\n        })\r\n    },[])\r\n    \r\n    const likePost=(id)=>{\r\n        fetch('/like',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            //console.log(result.result._id)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    \r\n    const unlikePost=(id)=>{\r\n        fetch(\"/unlike\",{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n                //console.log(result.result._id)\r\n                const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const makeComment = (text,postId)=>{\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const deletePost = (postid)=>{\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            //console.log(result)\r\n            const newData = data.filter(item=>{\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"home\">\r\n            {\r\n                data.map(item=>{\r\n                    return (\r\n                        <div key={item._id} className=\"card home-card\">\r\n                            <h5 style={{padding:\"6px\"}}><Link to={(item.postedBy._id !== state._id)?`/profile/${item.postedBy._id}`:\"/profile\"}>{item.postedBy.name}</Link> {item.postedBy._id == state._id \r\n                                && <i className=\"material-icons\" style={{float:\"right\"}}\r\n                                onClick={ ()=>{ deletePost(item._id)}}\r\n                            >delete</i>\r\n                            }</h5>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.photo}/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                                {item.likes.includes(state._id)\r\n                                ? \r\n                                <i className=\"material-icons\"\r\n                                    onClick={()=>{unlikePost(item._id)}} style={{color:\"red\"}}\r\n                                >favorite</i>\r\n                                : \r\n                                <i className=\"material-icons\"\r\n                                    onClick={()=>{likePost(item._id)}}\r\n                                >favorite_border</i>\r\n                                }                                                         \r\n                                <h6>{item.likes.length} Likes</h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    item.comments.map(record=>{\r\n                                        return(\r\n                                        <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e)=>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value, item._id)\r\n                                }}>\r\n                                    <input type=\"text\" placeholder=\"Add a comment!\"/>\r\n                                </form>\r\n                            </div>\r\n                        </div>  \r\n                    )\r\n                })\r\n            }              \r\n        </div>\r\n    );\r\n}\r\nexport default SubscribedUserPosts;",{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":22,"column":10,"nodeType":"97","messageId":"98","endLine":22,"endColumn":15},{"ruleId":"99","severity":1,"message":"100","line":30,"column":5,"nodeType":"101","endLine":30,"endColumn":7,"suggestions":"102"},{"ruleId":"95","severity":1,"message":"96","line":7,"column":12,"nodeType":"97","messageId":"98","endLine":7,"endColumn":17},{"ruleId":"103","severity":1,"message":"104","line":12,"column":23,"nodeType":"105","messageId":"106","endLine":12,"endColumn":24,"suggestions":"107"},{"ruleId":"103","severity":1,"message":"104","line":12,"column":48,"nodeType":"105","messageId":"106","endLine":12,"endColumn":49,"suggestions":"108"},{"ruleId":"95","severity":1,"message":"109","line":9,"column":19,"nodeType":"97","messageId":"98","endLine":9,"endColumn":27},{"ruleId":"110","severity":1,"message":"111","line":64,"column":28,"nodeType":"112","messageId":"113","endLine":64,"endColumn":30},{"ruleId":"110","severity":1,"message":"111","line":128,"column":192,"nodeType":"112","messageId":"113","endLine":128,"endColumn":194},{"ruleId":"114","severity":1,"message":"115","line":134,"column":33,"nodeType":"116","endLine":134,"endColumn":56},{"ruleId":"99","severity":1,"message":"117","line":21,"column":7,"nodeType":"101","endLine":21,"endColumn":9,"suggestions":"118"},{"ruleId":"99","severity":1,"message":"119","line":54,"column":7,"nodeType":"101","endLine":54,"endColumn":14,"suggestions":"120"},{"ruleId":"114","severity":1,"message":"115","line":68,"column":21,"nodeType":"116","endLine":69,"endColumn":47},{"ruleId":"95","severity":1,"message":"121","line":1,"column":15,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"122","line":4,"column":9,"nodeType":"97","messageId":"98","endLine":4,"endColumn":20},{"ruleId":"99","severity":1,"message":"123","line":57,"column":7,"nodeType":"101","endLine":57,"endColumn":12,"suggestions":"124"},{"ruleId":"110","severity":1,"message":"125","line":75,"column":45,"nodeType":"112","messageId":"113","endLine":75,"endColumn":47},{"ruleId":"99","severity":1,"message":"126","line":15,"column":7,"nodeType":"101","endLine":15,"endColumn":12,"suggestions":"127"},{"ruleId":"103","severity":1,"message":"104","line":34,"column":22,"nodeType":"105","messageId":"106","endLine":34,"endColumn":23,"suggestions":"128"},{"ruleId":"103","severity":1,"message":"104","line":34,"column":47,"nodeType":"105","messageId":"106","endLine":34,"endColumn":48,"suggestions":"129"},{"ruleId":"95","severity":1,"message":"130","line":5,"column":12,"nodeType":"97","messageId":"98","endLine":5,"endColumn":20},{"ruleId":"95","severity":1,"message":"131","line":5,"column":22,"nodeType":"97","messageId":"98","endLine":5,"endColumn":33},{"ruleId":"95","severity":1,"message":"132","line":6,"column":12,"nodeType":"97","messageId":"98","endLine":6,"endColumn":23},{"ruleId":"95","severity":1,"message":"133","line":6,"column":25,"nodeType":"97","messageId":"98","endLine":6,"endColumn":39},{"ruleId":"99","severity":1,"message":"134","line":24,"column":7,"nodeType":"101","endLine":24,"endColumn":9,"suggestions":"135"},{"ruleId":"110","severity":1,"message":"125","line":68,"column":80,"nodeType":"112","messageId":"113","endLine":68,"endColumn":82},{"ruleId":"114","severity":1,"message":"115","line":93,"column":21,"nodeType":"116","endLine":94,"endColumn":49},{"ruleId":"95","severity":1,"message":"109","line":7,"column":19,"nodeType":"97","messageId":"98","endLine":7,"endColumn":27},{"ruleId":"110","severity":1,"message":"111","line":35,"column":28,"nodeType":"112","messageId":"113","endLine":35,"endColumn":30},{"ruleId":"110","severity":1,"message":"111","line":61,"column":28,"nodeType":"112","messageId":"113","endLine":61,"endColumn":30},{"ruleId":"110","severity":1,"message":"111","line":88,"column":28,"nodeType":"112","messageId":"113","endLine":88,"endColumn":30},{"ruleId":"110","severity":1,"message":"111","line":122,"column":192,"nodeType":"112","messageId":"113","endLine":122,"endColumn":194},{"ruleId":"114","severity":1,"message":"115","line":128,"column":33,"nodeType":"116","endLine":128,"endColumn":56},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["138"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["139","140"],["141","142"],"'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["143"],"React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["144"],"'useContext' is defined but never used.","'UserContext' is defined but never used.","React Hook useEffect has missing dependencies: 'body', 'history', 'show', and 'title'. Either include them or remove the dependency array.",["145"],"Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["146"],["147","148"],["149","150"],"'userPics' is assigned a value but never used.","'setUserPics' is assigned a value but never used.","'userDetails' is assigned a value but never used.","'setUserDetails' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["151"],"no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"messageId":"154","fix":"155","desc":"156"},{"messageId":"157","fix":"158","desc":"159"},{"messageId":"154","fix":"160","desc":"156"},{"messageId":"157","fix":"161","desc":"159"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"messageId":"154","fix":"170","desc":"156"},{"messageId":"157","fix":"171","desc":"159"},{"messageId":"154","fix":"172","desc":"156"},{"messageId":"157","fix":"173","desc":"159"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [dispatch, history]",{"range":"176","text":"177"},"removeEscape",{"range":"178","text":"179"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"180","text":"181"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"182","text":"179"},{"range":"183","text":"181"},"Update the dependencies array to be: [state]",{"range":"184","text":"185"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"186","text":"187"},"Update the dependencies array to be: [body, history, show, title, url]",{"range":"188","text":"189"},"Update the dependencies array to be: [uploadFields, url]",{"range":"190","text":"191"},{"range":"192","text":"179"},{"range":"193","text":"181"},{"range":"194","text":"179"},{"range":"195","text":"181"},"Update the dependencies array to be: [userId]",{"range":"196","text":"197"},[1150,1152],"[dispatch, history]",[425,426],"",[425,425],"\\",[450,451],[450,450],[685,687],"[state]",[1857,1864],"[dispatch, image, state]",[1995,2000],"[body, history, show, title, url]",[435,440],"[uploadFields, url]",[1014,1015],[1014,1014],[1039,1040],[1039,1039],[906,908],"[userId]"]